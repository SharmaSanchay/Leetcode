// leetcode->380 (vector and unordered_map)
/*
vector is used to insert the element in O(1)
and to get the get random element.
But the removal of element O(1) is not possible with the vector
so we used unordered_map to remove the element in O(1)  and we store the element and their index and rest you can see code!
*/
class RandomizedSet {
public:
    vector<int>ans;
    unordered_map<int,int>mp;
    RandomizedSet() {
        
    }
    
    bool insert(int val) {
        if(mp.find(val)!=mp.end()){
            return false;
        }
        ans.push_back(val);
        mp[val] = ans.size()-1;
        return true;
    }
    
    bool remove(int val) {
        if(mp.find(val)==mp.end()){
            return false;
        }
        int idx = mp[val];
        int lastElement = ans.back();
        ans.back() = val;
        ans[idx] = lastElement;
        mp[lastElement] = idx;
        ans.pop_back();
        mp.erase(val);
        return true;
    }
    
    int getRandom() {
        int n = ans.size();
        int random = rand()%n;
        return ans[random];
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */
