// Leetcode  -> 3011 (Find if Array Can be Sorted)
class Solution {
public:
// if write simple bubble sort code
    bool canSortArray(vector<int>& arr) {
        int n = arr.size();
        bool swapped;
        for (int i = 0; i < n - 1; i++) {
            swapped = false;
            for (int j = 0; j < n - i - 1; j++) {
                // if the curr element is smaller than the next element then no need to swap them
                if (arr[j] <= arr[j + 1]) {
                    continue;
                } else {
                    // now if  the curr element is greater thann the next element and has the same set bits then we swap them 
                if ( __builtin_popcount(arr[j]) == __builtin_popcount(arr[j+1])  && arr[j] > arr[j + 1]) {
                        swap(arr[j], arr[j + 1]);
                        swapped = true;
                }
                // otherwise we return false 
                else {
                    return false;
                }
            }
            // If no two elements were swapped, then break
            if (!swapped)
                break;
        }
        }
        return true;
    }
};
/*
Time Complexity -> O(N^2)
Space Complexity -> O(1)
*/
